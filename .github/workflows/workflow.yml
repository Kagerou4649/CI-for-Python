name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.8
  DOCKER_IMAGE_NAME: kube2py

jobs:
  python-ci:
    name: Python CI
    runs-on: ubuntu-latest

    defaults:
     run:
      working-directory: ./src

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Setup Python ${{ env.PYTHON_VERSION }}
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install flake8 pytest pytest-cov
           pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          cd ../
          flake8 . --show-source --statistics

      - name: Check Complexity
        run: |
          cd ../
          flake8 . --exit-zero --max-complexity=10 --statistics

      - name: Test with pytest
        run: |
          pytest -v --cov=. --cov-report=term-missing --cov-report=json

      - name: Upload python artifacts
        if: ${{ github.ref_name == 'main' }}
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: .

      - name: Upload helm artifacts
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: ${{ github.workspace }}/helm-charts

  build-image:
   name: Build and Push Image
   needs: python-ci
   runs-on: ubuntu-latest
   if: ${{ github.ref_name == 'main' }}

   steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  helm-ci:
   needs: python-ci
   runs-on: ubuntu-latest
   if: ${{ github.ref_name == 'main' }}

   steps:
    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .
    # Setting Up Helm Features
    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0

    - name: Lint Helm
      run: helm lint ./kube2py/

    - name: Template Helm
      run: helm template kube2py ./kube2py/ -f ./kube2py/values.yaml

    - name: Package Helm
      run: helm package ./kube2py/

    - name: Upload Helm package
      uses: actions/upload-artifact@v4
      with:
        name: helm-package
        path: ./*.tgz

  deploy-helm:
   name: Deploy Helm
   needs: [ helm-ci, build-image ]
   runs-on: ubuntu-latest

   steps:
   - uses: actions/download-artifact@v4
     with:
       name: helm-package
       path: .

   - name: Set up Helm
     uses: azure/setup-helm@v4.2.0